(function(){

///////////////////////////////////////
// 
var CONS_JOURNAL_EXT = "_EX.txt";

// here-string CRLF
//  ↓↓↓↓↓↓↓↓↓
var herestrings = function(){
/*
---
created: {{date_str3}}
modified: {{date_str3}}
title: {{date_str2}}

---

# {{date_str2}} :

## memo : {{date_str}} ({{day_str}}) {{time_str}} :

- {{clip_text}}

*/
}

function replace_all(string, target, replacement) {
  var result = "";
  var offset = 0;
  var target_length = target.length;
  if (target_length === 0) {
    for (var i = 0, c = string.length; i < c; i++) {
      result += string[i];
      result += replacement;
    }
    if (result.length)
      return result.substr(0, result.length - replacement.length);
    return result;
  }
  do {
    var i = string.indexOf(target, offset);
    if (i === -1) {
      result += string.substring(offset);
      return result;
    }
    result += string.substring(offset, i);
    result += replacement;
    offset = i + target_length;
  } while (true);
}

if(!Object.keys){
    Object.keys = function(obj){
        var keys = [];
        for(var i in obj){
            if(obj.hasOwnProperty(i)){
                keys.push(i);
            }
        }
        return keys;
    };
}

function get_template(sep){
  sep = sep || '\r\n';
  var template = herestrings.toString().split(sep).slice(2,-2).join(sep);
  return template;
}

function merge_map(template, map_){
  var keys_ = Object.keys(map_);
  for(key_ in keys_){
    var value_ = map_[keys_[key_]];
    template = replace_all(template, '{{' + keys_[key_] + '}}', value_);
  };
  return template;
}

function get_todayString(){
  var sep = '';
  if(arguments.length){
    sep = arguments[0]
  }
  var dtm = new Date();
  return [
    ('' + dtm.getFullYear()).slice(-2),
    ('0' + (dtm.getMonth() +1)).slice(-2),
    ('0' + dtm.getDate()).slice(-2)
  ].join(sep);
}

function get_nowTimeString(){
  var sep = '';
  if(arguments.length){
    sep = arguments[0]
  }
  var dtm = new Date();
  return [
    ('0' + dtm.getHours()).slice(-2),
    ('0' + dtm.getMinutes()).slice(-2)
  ].join(sep);
}

function get_todayDayString(){
  var aryDay = ["Sunday", "Monday", "Tuesday", "Wednesday", "Thursday", "Friday", "Saturday"];
  var dtm = new Date();
  var dw = dtm.getDay();
  return aryDay[dw].substr(0, 3);
}

function doProcess(){
  // merge template
  var template = get_template();
  
  var date_str = get_todayString('/');
  var day_str = get_todayDayString();
  var time_str = get_nowTimeString(':');
  var date_str2 = replace_all('20' + date_str,'/','-') + CONS_JOURNAL_EXT;
  var date_str3 = '20' + replace_all(date_str,'/','-') + 'T' + time_str + ':00+09:00';
  var clip_text = Editor.GetClipboard(0);
  var map_ = {
    'date_str' : date_str,
    'day_str' : day_str,
    'time_str' : time_str,
    'date_str2' : date_str2,
    'date_str3' : date_str3,
    'clip_text' : clip_text
  }
  var merged_template = merge_map(template,map_);
  
  // screen operation
  Editor.GoFileEnd(0);
  Editor.InsText(merged_template);
  Editor.Left(0);
}

// -------------- entry point
if(typeof(Editor) !== 'undefined'){
  doProcess();
} else {
  if(typeof(WScript) !== 'undefined'){
    WScript.Echo('This script is for sakura macro.');
  } else {
    console.log('This script is for sakura macro.');
  }
}

}())
